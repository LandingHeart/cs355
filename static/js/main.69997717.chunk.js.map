{"version":3,"sources":["component/Navbar.js","component/About.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","to","role","aria-haspopup","aria-labelledby","onClick","window","open","Component","About","props","handleSubmit","e","preventDefault","data","JSON","stringify","name","state","email","message","fetch","method","body","then","res","ok","console","log","handleChange","target","value","setState","success","style","width","height","marginTop","boxShadow","padding","onSumit","this","paddingBottom","onChange","rows","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.69997717.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nexport class Navbar extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <div className=\"container\">\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarSupportedContent\"\n              aria-controls=\"navbarSupportedContent\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div\n              className=\"collapse navbar-collapse mr-auto\"\n              id=\"navbarSupportedContent\"\n            >\n              <ul className=\"navbar-nav mx-auto\">\n                <Link className=\"navbar-brand\" href=\"#\" to=\"/\">\n                  HOME\n                </Link>\n                <li className=\"nav-item dropdown\">\n                  <a\n                    className=\"nav-link\"\n                    href=\"/\"\n                    id=\"navbarDropdown\"\n                    role=\"button\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                  >\n                    Course\n                  </a>\n                  <div\n                    className=\"dropdown-menu\"\n                    aria-labelledby=\"navbarDropdown\"\n                  >\n                    <Link\n                      className=\"dropdown-item\"\n                      onClick={() =>\n                        window.open(\"https://www.zybooks.com/\", \"_blank\")\n                      }\n                    >\n                      ZyBook\n                    </Link>\n                    <Link\n                      className=\"dropdown-item\"\n                      href=\"#\"\n                      onClick={() =>\n                        window.open(\"http://www.tophat.com\", \"_blank\")\n                      }\n                    >\n                      TopHat\n                    </Link>\n                    <Link\n                      className=\"dropdown-item\"\n                      onClick={() =>\n                        window.open(\n                          \"https://drive.google.com/drive/folders/1co7vzY9_75cCiuNTHXCGf3pKbpf_TTwC\",\n                          \"_blank\"\n                        )\n                      }\n                    >\n                      Course Google Drive\n                    </Link>\n                    <Link\n                      className=\"dropdown-item\"\n                      onClick={() =>\n                        window.open(\"https://www.w3schools.com\", \"_blank\")\n                      }\n                    >\n                      {\" \"}\n                      W3School\n                    </Link>\n                  </div>\n                </li>\n\n                <li className=\"nav-item dropdown\">\n                  <Link\n                    className=\"nav-link\"\n                    href=\"#\"\n                    id=\"navbarDropdown\"\n                    role=\"button\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                    to=\"/about\"\n                  >\n                    About\n                  </Link>\n                  <div\n                    className=\"dropdown-menu\"\n                    aria-labelledby=\"navbarDropdown\"\n                  >\n                    <Link to=\"/about\" className=\"dropdown-item\" href=\"#\">\n                      About Developer\n                    </Link>\n                    <Link className=\"dropdown-item\" href=\"#\">\n                      Contact\n                    </Link>\n                  </div>\n                </li>\n\n                <li className=\"nav-item dropdown\">\n                  <Link\n                    className=\"nav-link\"\n                    href=\"#\"\n                    id=\"navbarDropdown\"\n                    role=\"button\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                  >\n                    Browser\n                  </Link>\n                  <div\n                    className=\"dropdown-menu\"\n                    aria-labelledby=\"navbarDropdown\"\n                  >\n                    <Link className=\"dropdown-item\" href=\"#\">\n                      Navigator\n                    </Link>\n                    <Link className=\"dropdown-item\" href=\"#\">\n                      Window\n                    </Link>\n                    <div className=\"dropdown-item\"></div>\n                    <Link className=\"dropdown-item\" href=\"#\">\n                      Screen\n                    </Link>\n                    <Link className=\"dropdown-item\" href=\"#\">\n                      Location\n                    </Link>\n                    <Link className=\"dropdown-item\" href=\"#\">\n                      Geolocation\n                    </Link>\n                  </div>\n                </li>\n\n                <li className=\"nav-item dropdown\">\n                  <Link\n                    className=\"nav-link\"\n                    href=\"#\"\n                    id=\"navbarDropdown\"\n                    role=\"button\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                  >\n                    Search\n                  </Link>\n                  <div\n                    className=\"dropdown-menu\"\n                    aria-labelledby=\"navbarDropdown\"\n                  >\n                    <Link className=\"dropdown-item\" href=\"#\">\n                      From File\n                    </Link>\n                    <Link className=\"dropdown-item\" href=\"#\">\n                      Course Google Drive\n                    </Link>\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\n\nexport default class About extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: \"\", email: \"\", message: \"\", success: false };\n  }\n  handleSubmit = e => {\n    e.preventDefault();\n    const data = JSON.stringify({\n      name: this.state.name,\n      email: this.state.email,\n      message: this.state.message\n    });\n\n    fetch(\"./send-mail.php\", {\n      method: \"POST\",\n      body: data\n    }).then(res => {\n      if (res.ok) {\n        console.log(\"success\");\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  handleChange = e => {\n    const { value, name } = e.target;\n    this.setState = {\n      [name]: value\n    };\n  };\n\n  render() {\n    return (\n      <div\n        className=\"container\"\n        style={{\n          width: \"350px\",\n          height: \"500px\",\n          marginTop: \"20px\",\n          boxShadow:\n            \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\n        }}\n      >\n        <div style={{ padding: \"30px\" }}>\n          <form onSumit={this.handleSubmit}>\n            <h3 style={{ paddingBottom: \"20px\" }}> Send me a Message</h3>\n            <div className=\"form-group\">\n              <label>Name</label>\n              <input\n                type=\"name\"\n                className=\"form-control input-box\"\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Email</label>\n              <input\n                type=\"email\"\n                className=\"form-control input-box\"\n                onChange={this.handleChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Message</label>\n              <textarea\n                className=\"form-control input-box\"\n                rows=\"3\"\n                onChange={this.handleChange}\n              ></textarea>\n            </div>\n            <input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./component/Navbar\";\nimport About from \"./component/About\";\nimport AddQuestions from \"./component/AddQuestions\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\"></Route>\n        <Route path=\"/about\" component={About}></Route>\n        <Route path=\"/contact\"></Route>\n      </Switch>\n\n      <AddQuestions />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}